<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'doctrine.dbal.lp_perl_connection' shared service.

$a = new \Doctrine\DBAL\Configuration();

$b = new \Doctrine\DBAL\Logging\LoggerChain();
$b->addLogger(($this->privates['doctrine.dbal.logger'] ?? $this->getDoctrine_Dbal_LoggerService()));
$b->addLogger(($this->privates['doctrine.dbal.logger.profiling.lp_perl'] ?? ($this->privates['doctrine.dbal.logger.profiling.lp_perl'] = new \Doctrine\DBAL\Logging\DebugStack())));

$a->setSQLLogger($b);
$c = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
$c->addEventSubscriber(($this->privates['vich_uploader.listener.clean.product_images'] ?? $this->getVichUploader_Listener_Clean_ProductImagesService()));
$c->addEventSubscriber(($this->privates['vich_uploader.listener.remove.product_images'] ?? $this->getVichUploader_Listener_Remove_ProductImagesService()));
$c->addEventSubscriber(($this->privates['vich_uploader.listener.upload.product_images'] ?? $this->getVichUploader_Listener_Upload_ProductImagesService()));
$c->addEventListener([0 => 'loadClassMetadata'], new \Doctrine\ORM\Tools\AttachEntityListenersListener());

return $this->services['doctrine.dbal.lp_perl_connection'] = ($this->privates['doctrine.dbal.connection_factory'] ?? ($this->privates['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory([])))->createConnection(['url' => $this->getEnv('DATABASE_LP_PERL_URL'), 'driver' => 'pdo_mysql', 'charset' => 'UTF8', 'host' => 'localhost', 'port' => NULL, 'user' => 'root', 'password' => NULL, 'driverOptions' => [], 'serverVersion' => '5.7', 'defaultTableOptions' => []], $a, $c, []);
